<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kgc.community.mapper.ExceptionMapper" >
  <resultMap id="BaseResultMap" type="com.kgc.community.pojo.Exception" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="sponsor_id" property="sponsorId" jdbcType="INTEGER" />
    <result column="handle_id" property="handleId" jdbcType="INTEGER" />
    <result column="laborer_id" property="laborerId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="begin_handle_time" property="beginHandleTime" jdbcType="TIMESTAMP" />
    <result column="end_handle_time" property="endHandleTime" jdbcType="TIMESTAMP" />
    <result column="type" property="type" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, sponsor_id, handle_id, laborer_id, status, start_time, begin_handle_time, end_handle_time, 
    type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.kgc.community.pojo.ExceptionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from exception
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from exception
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from exception
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kgc.community.pojo.ExceptionExample" >
    delete from exception
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kgc.community.pojo.Exception" >
    insert into exception (id, sponsor_id, handle_id, 
      laborer_id, status, start_time, 
      begin_handle_time, end_handle_time, type
      )
    values (#{id,jdbcType=INTEGER}, #{sponsorId,jdbcType=INTEGER}, #{handleId,jdbcType=INTEGER}, 
      #{laborerId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP}, 
      #{beginHandleTime,jdbcType=TIMESTAMP}, #{endHandleTime,jdbcType=TIMESTAMP}, #{type,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.kgc.community.pojo.Exception" >
    insert into exception
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="sponsorId != null" >
        sponsor_id,
      </if>
      <if test="handleId != null" >
        handle_id,
      </if>
      <if test="laborerId != null" >
        laborer_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="beginHandleTime != null" >
        begin_handle_time,
      </if>
      <if test="endHandleTime != null" >
        end_handle_time,
      </if>
      <if test="type != null" >
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sponsorId != null" >
        #{sponsorId,jdbcType=INTEGER},
      </if>
      <if test="handleId != null" >
        #{handleId,jdbcType=INTEGER},
      </if>
      <if test="laborerId != null" >
        #{laborerId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="beginHandleTime != null" >
        #{beginHandleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endHandleTime != null" >
        #{endHandleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kgc.community.pojo.ExceptionExample" resultType="java.lang.Integer" >
    select count(*) from exception
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update exception
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sponsorId != null" >
        sponsor_id = #{record.sponsorId,jdbcType=INTEGER},
      </if>
      <if test="record.handleId != null" >
        handle_id = #{record.handleId,jdbcType=INTEGER},
      </if>
      <if test="record.laborerId != null" >
        laborer_id = #{record.laborerId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.beginHandleTime != null" >
        begin_handle_time = #{record.beginHandleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endHandleTime != null" >
        end_handle_time = #{record.endHandleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update exception
    set id = #{record.id,jdbcType=INTEGER},
      sponsor_id = #{record.sponsorId,jdbcType=INTEGER},
      handle_id = #{record.handleId,jdbcType=INTEGER},
      laborer_id = #{record.laborerId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      begin_handle_time = #{record.beginHandleTime,jdbcType=TIMESTAMP},
      end_handle_time = #{record.endHandleTime,jdbcType=TIMESTAMP},
      type = #{record.type,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kgc.community.pojo.Exception" >
    update exception
    <set >
      <if test="sponsorId != null" >
        sponsor_id = #{sponsorId,jdbcType=INTEGER},
      </if>
      <if test="handleId != null" >
        handle_id = #{handleId,jdbcType=INTEGER},
      </if>
      <if test="laborerId != null" >
        laborer_id = #{laborerId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="beginHandleTime != null" >
        begin_handle_time = #{beginHandleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endHandleTime != null" >
        end_handle_time = #{endHandleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kgc.community.pojo.Exception" >
    update exception
    set sponsor_id = #{sponsorId,jdbcType=INTEGER},
      handle_id = #{handleId,jdbcType=INTEGER},
      laborer_id = #{laborerId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      begin_handle_time = #{beginHandleTime,jdbcType=TIMESTAMP},
      end_handle_time = #{endHandleTime,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>